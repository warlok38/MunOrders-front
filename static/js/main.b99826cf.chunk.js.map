{"version":3,"sources":["Components/NoMatch/styled.js","Components/Table/styled.js","routes.js","Components/Table/index.jsx","Components/NoMatch/index.jsx","Components/MainMenu/styled.js","Components/MainMenu/index.jsx","Components/Root.jsx","index.js"],"names":["Wrapper","styled","div","Status","Title","Table","AntdTable","routes","path","component","columns","title","render","id","record","index","dataIndex","period","dateFrom","dataSource","mockData","pagination","MainMenu","to","Root","history","createBrowserHistory","exact","map","route","ReactDOM","StrictMode","document","getElementById"],"mappings":"yPAEaA,EAAUC,IAAOC,IAAV,iGAKPC,EAASF,IAAOC,IAAV,kGAKNE,EAAQH,IAAOC,IAAV,0E,yBCTLF,EAAUC,IAAOC,IAAV,iGAKPC,EAASF,IAAOC,IAAV,kGAKNG,EAAQJ,YAAOK,IAAPL,CAAH,0BCVLM,EAAS,CAClB,CACIC,KAAM,SACNC,UCFa,WACjB,IAAMC,EAAU,CACZ,CACIC,MAAO,SACPC,OAAQ,SAACC,EAAIC,EAAQC,GAAb,OAAuB,8BAAkBA,GAARA,KAE7C,CACIJ,MAAO,KACPK,UAAW,MAEf,CACIL,MAAO,4EACPK,UAAW,eAEf,CACIL,MAAO,mDACPK,UAAW,YAEf,CACIL,MAAO,kFACPK,UAAW,YAEf,CACIL,MAAO,yDACPK,UAAW,YAEf,CACIL,MAAO,uCACPK,UAAW,SACXJ,OAAQ,SAACK,EAAQF,GAAT,OACJ,gCACI,+BAAOE,EAAOC,WACd,qCACA,+BAAOD,EAAOC,aAHRH,KAOlB,CACIJ,MAAO,kFACPK,UAAW,UAInB,OACI,eAAC,EAAD,WACI,cAAC,EAAD,0DACA,cAAC,EAAD,CACIG,WAAYC,EACZV,QAASA,EACTW,YAAY,SD7CxB,CACIZ,UENe,WACnB,OACI,eAAC,EAAD,WACI,cAAC,EAAD,kBACA,cAAC,EAAD,6HCLCT,EAAUC,IAAOC,IAAV,iGAKPC,EAASF,IAAOC,IAAV,kGCHNoB,GDQQrB,IAAOC,IAAV,0ECRM,WACpB,OACI,eAAC,EAAD,WACI,cAAC,EAAD,UACI,cAAC,IAAD,CAAMqB,GAAG,SAAT,6EAEJ,cAAC,IAAD,CAAMA,GAAG,SAAT,SACI,cAAC,EAAD,uDAEJ,cAAC,IAAD,CAAMA,GAAG,SAAT,SACI,cAAC,EAAD,4DCPHC,G,OAAO,WAChB,OAEI,aADA,CACC,IAAD,CAAYC,QAASC,cAArB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOlB,KAAK,IAAII,OAAQU,EAAUK,OAAK,IACtCpB,EAAOqB,KAAI,SAACC,EAAOd,GAAR,OACR,cAAC,IAAD,CAEIP,KAAMqB,EAAMrB,KACZI,OAAQiB,EAAMpB,UACdkB,OAAK,GAHAZ,a,OCP7Be,IAASlB,OACL,cAAC,IAAMmB,WAAP,UAGI,cAAC,EAAD,MAIJC,SAASC,eAAe,U","file":"static/js/main.b99826cf.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 60px;\r\n`;\r\nexport const Status = styled.div`\r\n    font-size: 20px;\r\n    line-height: 23px;\r\n    font-weight: bold;\r\n`;\r\nexport const Title = styled.div`\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Table as AntdTable } from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 60px;\r\n`;\r\nexport const Status = styled.div`\r\n    font-size: 20px;\r\n    line-height: 23px;\r\n    font-weight: bold;\r\n`;\r\nexport const Table = styled(AntdTable)``;\r\n","import { NoMatch } from './Components/NoMatch';\r\nimport { Table } from './Components/Table';\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/table',\r\n        component: Table,\r\n    },\r\n    {\r\n        component: NoMatch,\r\n    },\r\n];\r\n","import React from 'react';\r\nimport mockData from './mock.json';\r\nimport * as S from './styled';\r\n\r\nexport const Table = () => {\r\n    const columns = [\r\n        {\r\n            title: '№',\r\n            render: (id, record, index) => <div key={index}>{index}</div>,\r\n        },\r\n        {\r\n            title: 'id',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'ИНН заказчика',\r\n            dataIndex: 'customerInn',\r\n        },\r\n        {\r\n            title: 'Заказчик',\r\n            dataIndex: 'customer',\r\n        },\r\n        {\r\n            title: 'ИНН поставщика',\r\n            dataIndex: 'supplier',\r\n        },\r\n        {\r\n            title: 'Поставщик',\r\n            dataIndex: 'supplier',\r\n        },\r\n        {\r\n            title: 'Период',\r\n            dataIndex: 'period',\r\n            render: (period, index) => (\r\n                <div key={index}>\r\n                    <span>{period.dateFrom}</span>\r\n                    <span>-</span>\r\n                    <span>{period.dateFrom}</span>\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Цена контракта',\r\n            dataIndex: 'price',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <S.Wrapper>\r\n            <S.Status>Таблица!</S.Status>\r\n            <S.Table\r\n                dataSource={mockData}\r\n                columns={columns}\r\n                pagination={false}\r\n            />\r\n        </S.Wrapper>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport * as S from './styled';\r\n\r\nexport const NoMatch = () => {\r\n    return (\r\n        <S.Wrapper>\r\n            <S.Status>404</S.Status>\r\n            <S.Title>Страница не найдена</S.Title>\r\n        </S.Wrapper>\r\n    );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 60px;\r\n`;\r\nexport const Status = styled.div`\r\n    font-size: 20px;\r\n    line-height: 23px;\r\n    font-weight: bold;\r\n`;\r\nexport const Title = styled.div`\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as S from './styled';\r\n\r\nexport const MainMenu = () => {\r\n    return (\r\n        <S.Wrapper>\r\n            <S.Status>\r\n                <Link to=\"/table\">Таблица тут</Link>\r\n            </S.Status>\r\n            <Link to=\"/link1\">\r\n                <S.Status>Ссылка 1</S.Status>\r\n            </Link>\r\n            <Link to=\"/link2\">\r\n                <S.Status>Ссылка 2</S.Status>\r\n            </Link>\r\n        </S.Wrapper>\r\n    );\r\n};\r\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { routes } from '../routes';\nimport { MainMenu } from './MainMenu';\nimport './style.css';\n\nexport const Root = () => {\n    return (\n        // HashRouter нужен для того, чтобы на gh-pages все грузилось\n        <HashRouter history={createBrowserHistory()}>\n            <Switch>\n                <Route path=\"/\" render={MainMenu} exact />\n                {routes.map((route, index) => (\n                    <Route\n                        key={index}\n                        path={route.path}\n                        render={route.component}\n                        exact\n                    />\n                ))}\n            </Switch>\n        </HashRouter>\n    );\n};\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Root } from './Components/Root';\nimport { ConfigProvider } from 'antd';\nimport ruRU from 'antd/es/locale/ru_RU';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        {/* <Provider> */}\n        {/* <ConfigProvider locale={ruRU}> */}\n        <Root />\n        {/* </ConfigProvider> */}\n        {/* </Provider> */}\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}